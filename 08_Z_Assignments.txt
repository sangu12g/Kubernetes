Learning Objectives:-
Create a ConfigMap called `candy-service-config` to store the container's configuration data.
Create a Kubernetes secret called `db-password` to store the database password.
Create the pod for the candy-service application according to the provided specification.

Problem Statement:-
Your company is nearing completion of their new mobile app, a candy-themed game. This application has some backend infrastructure the company plans to run using Kubernetes. They want to begin deploying one of their backend services to the cluster and have asked you to create a pod definition that meets the specifications required by the software. Create a pod definition in /home/cloud_user/candy-service-pod.yml, and then create a pod in the cluster using this definition to make sure it works.

The specifications are as follows:

The current image for the container is linuxacademycontent/candy-service:1. You do not need a custom command or args.
There is some configuration data the container will need:

candy.peppermint.power=100000000
candy.nougat-armor.strength=10

It will expect to find this data in a file at /etc/candy-service/candy.cfg. Store the configuration data in a ConfigMap called candy-service-config and provide it to the container as a mounted volume.
The container will need to run with the file system group with the id 2000. You will need to set this using the securityContext.
The container should expect to use 64MiB of memory and 250m CPU (use resource requests).
The container should be limited to 128MiB of memory and 500m CPU (use resource limits).
The container needs access to a database password in order to authenticate with a backend database server. The password is Kub3rn3t3sRul3s!. It should be stored in a secure fashion (as a Kubernetes secret called db-password) and passed to the container as an environment variable called DB_PASSWORD.
The container will need to access the Kubernetes API using the ServiceAccount candy-svc. The service account already exists, so just configure the pod to use it.
If you get stuck, be sure to check out the task descriptions below or the solution video. Good luck!



#Create a ConfigMap called `candy-service-config` to store the container's configuration data
candy-service-config.yml

apiVersion: v1
kind: ConfigMap
metadata:
  name: candy-service-config
data:
  config: |-
    ---
    :candy.peppermint.power: 100000000
    :candy.nougat-armor.strength: 10
	

#Create a Kubernetes secret called `db-password` to store the database password	
db-password.yml

apiVersion: v1
kind: Secret
metadata:
  name: db-password
stringData:
  mykey: Kub3rn3t3sRul3s!



#Create the pod for the candy-service application according to the provided specification
candy-service.yml

apiVersion: v1
kind: Pod
metadata:
  name: candy-service
  labels:
    app: web
spec:
  securityContext:
    fsGroup: 2000
  containers:
  - name: candy-service-ctr
    image: linuxacademycontent/candy-service:1
    env:
    - name: db-password
      valueFrom:
        secretKeyRef:
          name: db-password
          key: mykey
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        cpu: "500m"
        memory: "128Mi"
    volumeMounts:
    - name: candy-service-config
      mountPath: /etc/candy-service
  volumes:
  - name: candy-service-config
    configMap:
       name: candy-service-config
       items:
        - key: candy-service
          path: candy.cfg
		  
		  
error :

Warning  FailedMount  60s                 
kubelet, node01    Unable to mount volumes for pod "candy-service_default(1fc9e553-076d-11ea-b3d1-0242ac11003c)": 
timeout expired waiting for volumes to attach or mount for pod "default"/"candy-service". list of unmounted volumes=[candy-service-config].
 list of unattached volumes=[candy-service-config default-token-rchlq]
  Warning  FailedMount  56s (x9 over 3m3s)  kubelet, node01   
  MountVolume.SetUp failed for volume "candy-service-config" : configmap references non-existent config key: candy-service
		  
		  
apiVersion: v1
kind: Pod
metadata:
  name: candy-service
  labels:
    app: web
spec:
  securityContext:
    fsGroup: 2000
  containers:
  - name: candy-service-ctr
    image: linuxacademycontent/candy-service:1
    env:
    - name: db-password
      valueFrom:
        secretKeyRef:
          name: db-password
          key: mykey
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        cpu: "500m"
        memory: "128Mi"
    volumeMounts:
    - name: candy-service-config
      mountPath: /etc/candy-service
  volumes:
  - name: candy-service-config
    hostPath:
      path: /etc/candy-service 
